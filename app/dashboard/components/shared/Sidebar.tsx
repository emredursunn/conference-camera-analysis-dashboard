"use client";
import { useState } from "react";
import { useRouter } from "next/navigation";

const conferences = [
  {
    id: 1,
    name: "NVIDIA Keynote 2025",
    sections: [
      {
        title: "BÃ¶lÃ¼m 1: DÃ¶nÃ¼ÅŸÃ¼m: Tekil Ã‡ipten Yapay Zeka AltyapÄ±sÄ±",
        text:
          "Ä°lk bÃ¶lÃ¼mde, NVIDIA olarak dÃ¶nÃ¼ÅŸÃ¼m yolculuÄŸunuzu anlattÄ±nÄ±z. Tek bir Ã§ipten baÅŸlayarak, bu Ã§iplerle kurduÄŸunuz sistemlere, oradan veri merkezlerine ve nihayetinde devasa bir yapay zeka altyapÄ±sÄ±na nasÄ±l ulaÅŸtÄ±ÄŸÄ±nÄ±zÄ± adÄ±m adÄ±m gÃ¶sterdiniz. Bu sunumla, tekil bir bileÅŸen Ã¼reticisinden bÃ¼tÃ¼nsel bir \"Yapay Zeka FabrikasÄ±\" kurucusuna nasÄ±l evrildiÄŸinizi vurguladÄ±nÄ±z.",
      },
      {
        title:
          "BÃ¶lÃ¼m 2: Kurumsal Yapay Zeka Platformu ve Trilyon DolarlÄ±k Pazar",
        text:
          "Ä°kinci bÃ¶lÃ¼mde, trilyon dolarlÄ±k kÃ¼resel pazarÄ± hedefleyen Kurumsal Yapay Zeka Platformunuzu tanÄ±ttÄ±nÄ±z. Bu platformun sadece yapay zeka altyapÄ±sÄ± (donanÄ±m) ile sÄ±nÄ±rlÄ± kalmadÄ±ÄŸÄ±nÄ±; CUDA-X, NeMo, Omniverse gibi kritik yazÄ±lÄ±m katmanlarÄ±nÄ± da kapsadÄ±ÄŸÄ±nÄ± belirttiniz. Accenture ve Deloitte gibi iÅŸ ortaklÄ±klarÄ±nÄ±zla \"Agentic AI\" geliÅŸtirerek kurumsal mÃ¼ÅŸterilerinize nasÄ±l uÃ§tan uca Ã§Ã¶zÃ¼mler sunduÄŸunuzu vurguladÄ±nÄ±z.",
      },
      {
        title:
          "BÃ¶lÃ¼m 3: Yeni Yapay Zeka Veri Platformu ve AkÄ±llÄ± Muhakeme Motoru",
        text:
          "Son bÃ¶lÃ¼mde yeni NVIDIA Yapay Zeka Veri Platformunuzun lansmanÄ±nÄ± yaptÄ±nÄ±z. Bu platformun gÃ¼cÃ¼nÃ¼, Blackwell mimarisi Ã¼zerine kurulu yeni sunucularÄ±nÄ±zdan aldÄ±ÄŸÄ±nÄ± belirttiniz. AsÄ±l odak noktasÄ± olarak, NVIDIA AI-Q adÄ±nÄ± verdiÄŸiniz yeni nesil yapay zeka muhakeme motorunu tanÄ±ttÄ±nÄ±z. AI-Q'nun yalnÄ±zca yanÄ±t vermekle kalmayÄ±p, bir plan oluÅŸturduÄŸunu, hesap makinesi veya veri tabanÄ± gibi harici araÃ§larÄ± kullanarak muhakeme yÃ¼rÃ¼ttÃ¼ÄŸÃ¼nÃ¼ ve en sonunda akÄ±llÄ± bir yanÄ±t Ã¼rettiÄŸini anlattÄ±nÄ±z. Bu vizyonu hayata geÃ§irmek iÃ§in Dell, IBM ve NetApp gibi sektÃ¶r lideri ortaklarÄ±nÄ±zla olan iÅŸ birliklerinize de deÄŸindiniz.",
      },
    ],
  },
  { id: 2, name: "Marketing Summit 2025", sections: [] },
  { id: 3, name: "Design Week 2025", sections: [] },
];

export default function Sidebar() {
  const [selectedConference, setSelectedConference] = useState(conferences[0]);
  const router = useRouter();

  const handleLogout = () => {
    router.push("/login");
  };

  return (
    <div className="w-[28rem] h-screen bg-gray-50 shadow-md flex flex-col p-6">
      <div className="flex-1 overflow-y-auto">
        <h2 className="text-xl font-bold text-gray-900">Conferences</h2>
        <ul className="mt-4 space-y-2">
          {conferences.map((conference, idx) => (
            <li key={conference.id}>
              <button
                onClick={() => idx === 0 && setSelectedConference(conference)}
                disabled={idx !== 0}
                className={`w-full flex items-center text-left px-4 py-2 rounded-md text-sm font-medium ${
                  selectedConference.id === conference.id
                    ? "bg-indigo-600 text-white shadow-sm"
                    : "text-gray-700"
                } ${idx !== 0 ? "opacity-50 cursor-not-allowed" : "hover:bg-gray-100"}`}
              >
                {conference.name}
                {idx !== 0 && <span className="ml-2 text-gray-400">ðŸ”’</span>}
              </button>
            </li>
          ))}
        </ul>

        <div className="mt-8 pt-6 border-t border-gray-200">
          <h3 className="text-lg font-bold text-gray-900">
            {selectedConference.name} BÃ¶lÃ¼mleri
          </h3>
          <div className="mt-4 space-y-6">
            {selectedConference.sections.map((sec, index) => (
              <div key={index}>
                <h4 className="font-semibold text-gray-600 mb-1">{sec.title}</h4>
                <p className="text-sm text-gray-500 leading-relaxed">{sec.text}</p>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="mt-auto pt-6 border-t border-gray-200">
        <div className="flex items-center">
          <div className="w-10 h-10 bg-gray-300 rounded-full"></div>
          <div className="ml-3">
            <p className="text-sm font-medium text-gray-900">Presenter</p>
            <p className="text-xs text-gray-500">presenter@example.com</p>
          </div>
          <button
            onClick={handleLogout}
            className="ml-auto px-3 py-1 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700">
            Logout
          </button>
        </div>
      </div>
    </div>
  );
}
